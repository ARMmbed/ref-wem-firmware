diff --git a/features/FEATURE_LWIP/lwip-interface/lwip/src/include/lwip/arch.h b/features/FEATURE_LWIP/lwip-interface/lwip/src/include/lwip/arch.h
index 372cea1..f1f4cb1 100644
--- a/features/FEATURE_LWIP/lwip-interface/lwip/src/include/lwip/arch.h
+++ b/features/FEATURE_LWIP/lwip-interface/lwip/src/include/lwip/arch.h
@@ -121,7 +121,7 @@ typedef uintptr_t mem_ptr_t;
  * \#define LWIP_DECLARE_MEMORY_ALIGNED(variable_name, size) u32_t variable_name[(size + sizeof(u32_t) - 1) / sizeof(u32_t)]
  */
 #ifndef LWIP_DECLARE_MEMORY_ALIGNED
-#define LWIP_DECLARE_MEMORY_ALIGNED(variable_name, size) u8_t variable_name[LWIP_MEM_ALIGN_BUFFER(size)]
+#define LWIP_DECLARE_MEMORY_ALIGNED(variable_name, size) u8_t variable_name[LWIP_MEM_ALIGN_BUFFER(size)] __attribute__((section(".update")))
 #endif

 /** Calculate memory size for an aligned buffer - returns the next highest
diff --git a/targets/TARGET_Freescale/TARGET_MCUXpresso_MCUS/TARGET_MCU_K64F/device/TOOLCHAIN_GCC_ARM/MK64FN1M0xxx12.ld b/targets/TARGET_Freescale/TARGET_MCUXpr
index 327e9de..06197ce 100644
--- a/targets/TARGET_Freescale/TARGET_MCUXpresso_MCUS/TARGET_MCU_K64F/device/TOOLCHAIN_GCC_ARM/MK64FN1M0xxx12.ld
+++ b/targets/TARGET_Freescale/TARGET_MCUXpresso_MCUS/TARGET_MCU_K64F/device/TOOLCHAIN_GCC_ARM/MK64FN1M0xxx12.ld
@@ -241,6 +241,19 @@ SECTIONS
     __uvisor_bss_end = .;
   } > m_data

+  .update (NOLOAD) :
+  {
+    . = ALIGN(32);
+    *(.update)
+    *(.update*)
+    . = ALIGN(32);
+  } > m_data
+
+  __m_data_top = ORIGIN(m_data) + LENGTH(m_data);
+  __m_data_current = .;
+
+  ASSERT(__m_data_top >= __m_data_current, "region m_data overflowed with data")
+
   /* Heap space for the page allocator
   /* If uVisor shares the SRAM with the OS/app, ensure that this section is
    * the first one after the uVisor BSS section. Otherwise, ensure it is the


